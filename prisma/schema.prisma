// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id  String @id @default(cuid()) 
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  email String  @unique
  emailVerified DateTime?
  hashedPassword  String?
  image String?
  favoriteIds String[]  
  accounts  Account[]
  listings  Listing[]
  reversations  Reservation[]
}

//For Next-Auth
model Account{
  id  String  @id @default(cuid())  
  userId  String  
  type  String
  provider  String
  providerAccountId String
  refresh_token String? @db.Text
  access_token  String? @db.Text
  expires_at  Int?
  token_type  String?
  scope String?
  id_token  String  @db.Text
  session_state String?

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Listing{
  id  String  @id @default(cuid())
  title String
  desc  String
  createdAt DateTime  @default(now())
  category  String
  roomCount Int
  bathroomCount Int
  guestCount  Int
  locationValue String
  userId  String  
  price Int

  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  reservations  Reservation[] 
}

model Reservation{
  id  String  @id @default(uuid())
  userId  String  
  listingId String  
  startDate DateTime
  endDate DateTime
  totalPrice  Int
  createdAt DateTime  @default(now())
  
  listing Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)
  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
}






